#!/bin/bash

#. "$HOME/.bashrc"

filename="$HOME/"

echo -e "${HLIGHT}---start file: $filename---${NORMAL}" # start file

#---------------------------------------
:<<end_of_comments


 
 
 
 
 
Профиль:  Аноним  ( вход  |  регистрация ) 

 
 
 
 
 
 

 
 
 
 
  НОВОСТИ  ( + )
 
   КОНТЕНТ 
 
   WIKI 
 
    MAN'ы 
 
    ФОРУМ 
 
 Поиск  ( теги )
 
 
 

 

           
 
 

 
 
 
 
 
 
 
 [  новости  / +++  |  форум  |  wiki  |  теги 
|  
] 
 
 
 
 


 
 
 
 
 
 
 
 
 
 

 Интерактивная система просмотра системных руководств (man-ов) 
  
 
 
 

 
   Тема Набор Категория   
 

  
 Solaris man
 FreeBSD man
 Разные man
 Русские man
 Linux man
 POSIX man
 
 
	   All
	   1
	   2
	   3
	   4
	   5
	   6
	   7
	   8
	   9
 

 
 
  [ Cписок руководств  |  Печать ] 
 
 
 
 attr_back_fd (8) >>  attr_back_fd  (8)   ( Русские man: Команды системного администрирования ) 
   
 НАЗВАНИЕ 

 

 attr_back_fd  - Резервное копирование атрибутов для файлов.
   
 СИНТАКСИС 

 

 attr_back_fd  [ -r ] [ -v ] [ -m ] [ -o  имя_файла]  каталог/файл 
   
 ОПИСАНИЕ 

 

Программа  attr_back_fd  предназначена для резервного копирования (рекурсивного) атрибутов файлов находящихся в указанном каталоге.
 

Запуск программы следует производить с правами офицера безопасности при выключенных (всех) модулях RSBAC (см. switch_module).
   
 КЛЮЧИ 

 
 -r 
Выполнять с рекурсией по подкаталогам
 -v 
Игнорировать символические ссылки и выводить подробный отчет о совершаемых программой действиях
 -m 
Игнорировать ms_scanned
 -o   имя_файла   
Приказывает программе перенаправить вывод вместо stdout в файл  имя_файла 
 
   
 АТРИБУТЫ И ЗНАЧЕНИЯ 

 

Резервированию подлежат следующие атрибуты и значения:
 
 auth_may_set_cap 
Набор возможностей владельцев смены процессов
 

Значение:  0  = неверно,  1  = верно
 auth_may_setuid 
Флаг допуска на смену прав.
 

Значение:  0  = неверно,  1  = верно
 data_type 
Тип данных.
 

Значение:  0  = отсутствует,  1  = CDI,  2  = CDIIC,  3  = SI,  4  = наследуемый
 ff_flags   
Флаги файлов:
 

 1  =  read_only 
 

Обозначает, что каталог, со всеми его под-объектами, доступен в режиме <<только для чтения>>.
 

 2  =  execute_only 
 

Означает, что все файлы, находящиеся в этом каталоге, могут быть выполнены, но не могут быть прочитаны или скопированы.
 

 4  =  search_only 
 

Означает, что вы получите доступ к любому объекту в каталоге только при условии, что вы знаете его полное название, и что вам не позволено что-либо модифицировать в этом каталоге.
 

 8  =  write_only 
 

Предоставляет допуск на запись без допуска на чтение.
 

 16  =  secure_delete 
 

При удалении и усечении файл очищается (только ext2, msdos/vfat, minix).
 

 128  =  add_inherited 
 

Если установлен, то к собственным флагам объекта будут добавлены флаги родительского каталога. : флаг  add_inherited  не может быть унаследован, он всегда должен быть установлен явно.
 mac_categories 
64-значное строчное множество битов для всех категорий.
 

Возвращаемое значение: идентификатор RC-типа ( 0-63 ).
 mac_trusted_for_user 
Доверенные пользователи.
 

Значение:  -3  = без пользователя,  -4  = все пользователи,  ID-пользователя  = для данного пользователя 
 ms_scanned 
Флаг сканирования на наличие не желательного программного кода
 

Значение:  0  = не сканированные,  1  = отвергнутые,  >=2  = акцептированные
 ms_sock_trusted_tcp 
Результат проверки доменного tcp-подключения на наличие не желательного программного кода.
 

Значение:  0  = не_доверенные,  1  = активные,  2  = полностью доверенные
 ms_sock_trusted_udp 
Результат проверки доменного udp-подключения на наличие не желательного программного кода.
 

Значение:  0  = не_доверенные,  1  = активные,  2  = полностью доверенные
 ms_trusted 
Результат проверки объекта на наличие не желательного программного кода.
 

Значение:  0  = не_доверенные,  1  = доверенные на чтение,  2  = полностью доверенные
 log_array_high 
Старший бит вектора запросов.
 

Значение: битовая строка для всех Запросов
 ( l=0,h=0  = отсутствует,  l=1,h=0  = запрещено,  l=0,h=1  = полный,  l=1,h=1  = по запросу) 
 log_array_low 
Младший бит вектора запросов.
 

Значение: битовая строка для всех Запросов
 ( l=0,h=0  = отсутствует,  l=1,h=0  = запрещено,  l=0,h=1  = полный,  l=1,h=1  = по запросу) 
 log_program_based 
Журналирование событий системы базирующееся на запросах программ.
 

Значение: битовая строка для всех Запросов
 object_category 
Категория объекта.
 

Значение:  0  = основная,  1  = безопасность,  2  = системная,  3  = наследуемая
 pm_object_class 
PM-класс объекта.
 

Значение:  ID-Класса  (положительно целое число)
 pm_object_type 
PM-тип объекта.
 

Значение:  0  = отсутствует,  1  = TP,  2  = личные данные,  3  = не личные данные,  4  = ipc,  5  = каталог
 pm_tp 
PM-Transfer Procedure
 

Значение:  TP-ID  (положительно целое число)
 rc_force_role   
Идентификатор RC-типа процесса.
 

Признак форсирования роли процесса.
 

Значение: идентификатор RC-роли ( 0-63 ) или:
 

 64  =  inherit_user 
 

Означает использование пользовательской rc_def_role при CHOWN и EXECUTE.
 

 65  =  inherit_process  (удержание)
 

Означает удержание текущей rc_role процесса при CHOWN и EXECUTE.
 

 66  =  inherit_parent  (по умолчанию)
 

Означает использование текущей rc_role родительского процесса.
 

 67  =  inherit_user_on_chown_only  (по умолчанию для root)
 

Означает использование пользовательской rc_def_role при CHOWN.
 rc_initial_role 
Начальная роль.
 

Значение: Идентификатор RC-роли ( 0-63 ) или  66  = inherit_parent (по умолчанию),  68  = use_force_role (по умолчанию для root)
 rc_type_fd 
RC-тип
 

Значение: Идентификатор RC-типа ( 0-63 ) или  65  = наследовать от родительского
 security_level 
Уровень классификации безопасности.
 

Значение:  0  = неопределенный,  1  = 4 = наследованный, максимальный уровень  252 
 
   
 ПРИМЕРЫ 

 

Выполнить рекурсивное резервное копирование атрибутов файлов в каталоге .mutt домашнего каталога пользователя с сохранением результатов в файле my_mutt_attr.bak:
 

attr_back_fd -o my_mutt_attr.bak ~/.mutt
 

Выполнить резервное копирование атрибутов файлов и подкаталогов в каталоге /usr/lib игнорируя символические ссылки и имеющие флаги ms_scanned:
 

attr_back_fd -vrm /usr/lib
   
 АВТОРЫ 

 

 RSBAC  - Rule Set Based Access Control:
 


Amon Ott < ao@rsbac.org >
 

Stanislav Ievlev < inger@altlinux.ru >

 

Русские страницы руководства:
 


Александр Блохин < sass@uustoll.ee >

   
 СМ. ТАКЖЕ 

 

 RSBAC  - Rule Set Based Access Control,  attr_back_dev (8),  attr_back_user (8)
 

 
   Index 
 
 НАЗВАНИЕ 
 СИНТАКСИС 
 ОПИСАНИЕ 
 КЛЮЧИ 
 АТРИБУТЫ И ЗНАЧЕНИЯ 
 ПРИМЕРЫ 
 АВТОРЫ 
 СМ. ТАКЖЕ 
 
 
 
 
 
 Поиск по тексту MAN-ов:  
 
 
 
 
 
 
 
 
 
 
 


 
 


 
 
 
 
 
Спонсоры:
 
 
 
 
 
 
 
 
Хостинг:
 

 

 


 
 
 
 Закладки на сайте 
 Проследить за страницей 
 
 
Created 1996-2021 by  Maxim Chirkov 
 Добавить ,  Поддержать ,  Вебмастеру 
 
 
 
 


 
 
 






end_of_comments
#---------------------------------------

unset filename