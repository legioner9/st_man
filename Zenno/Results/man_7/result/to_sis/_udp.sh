#!/bin/bash

#. "$HOME/.bashrc"

filename="$HOME/"

echo -e "${HLIGHT}---start file: $filename---${NORMAL}" # start file

#---------------------------------------
:<<end_of_comments


 
 
 
 
 
Профиль:  Аноним  ( вход  |  регистрация ) 

 
 
 
 
 
 

 
 
 
 
  НОВОСТИ  ( + )
 
   КОНТЕНТ 
 
   WIKI 
 
    MAN'ы 
 
    ФОРУМ 
 
 Поиск  ( теги )
 
 
 

 

           
 
 

 
 
 
 
 
 
 
 [  новости  / +++  |  форум  |  wiki  |  теги 
|  
] 
 
 
 
 


 
 
 
 
 
 
 
 
 
 

 Интерактивная система просмотра системных руководств (man-ов) 
  
 
 
 

 
   Тема Набор Категория   
 

  
 Solaris man
 FreeBSD man
 Разные man
 Русские man
 Linux man
 POSIX man
 
 
	   All
	   1
	   2
	   3
	   4
	   5
	   6
	   7
	   8
	   9
 

 
 
  [ Cписок руководств  |  Печать ] 
 
 
 
 udp (7)   udp  (4)   ( FreeBSD man: Специальные файлы /dev/* )   udp  (4)   ( Linux man: Специальные файлы /dev/* )   udp  (7)   ( Solaris man: Макропакеты и соглашения ) >>  udp  (7)   ( Русские man: Макропакеты и соглашения )   udp  (7)   ( Linux man: Макропакеты и соглашения ) Ключ  udp  обнаружен в базе ключевых слов. 
   
 НАЗВАНИЕ 

udp - протокол UDP (User Datagram Protocol) поверх протокола IPv4.
   
 ОБЗОР 

 #include < sys/socket.h > 

 

 #include < netinet/in.h > 

 

 udp_socket = socket(PF_INET, SOCK_DGRAM, 0);  

 
   
 ОПИСАНИЕ 

Это реализация User Datagram Protocol (Протокола Пользовательских
Датаграмм, UDP), который описан в RFC768. 
Он обеспечивает ненадежную передачу датаграмм без установления соединения.
При пересылке пакеты могут дублироваться, а их порядок может быть нарушен.  UDP
генерирует и проверяет контрольные суммы, чтобы отловить ошибки передачи.
 
При создании UDP-сокета его локальный и удаленный адрес не указываются.
Датаграммы могут быть посланы немедленно с помощью 
 sendto (2)

или
 sendmsg (2),

с правильным адресом назначения в качестве аргумента.
Когда для сокета вызывается 
 connect (2),

то устанавливается адрес назначения по умолчанию и с этого момента датаграммы 
могут отсылаться с помощью 
 send (2)

или 
 write (2),

без указания адреса назначения.
При этом все еще сохраняется возможность послать пакет другому адресату,
передавая его адрес процедурам
 sendto (2)

или 
 sendmsg (2).

Для получения пакетов сокет сначала можно привязать к локальному адресу
с помощью
 bind (2).

В противном случае сокетный уровень автоматически присвоит свободный
локальный порт из диапазона, заданного в
 net.ipv4.ip_local_port_range ,

и привяжет сокет к
 INADDR_ANY .

 
Все операции приема возвращают только один пакет.  Если пакет меньше, чем 
размер буфера приема, то он возвращается целиком; если пакет больше, 
то он обрезается и устанавливается флаг 
 MSG_TRUNC .

 MSG_WAITALL 

не поддерживается.
 
Опции IP могут быть посланы или получены при помощи опций сокета, описанных в 
 ip (7).

Они обрабатываются ядром, если включено соответствующее sysctl-значение
(но даже если оно отключено, опции все равно передаются пользователю). Смотри 
 ip (7).

 
Если при отсылке установлен флаг 
 MSG_DONTROUTE ,

то адрес назначения должен указывать на адрес локального интерфейса,
и пакеты посылаются только на этот интерфейс.  
 
UDP фрагментирует пакет, если его общий размер превышает значение MTU 
(Maximum Transmission Unit) интерфейса. 
Более дружелюбной для сети альтернативой является использование метода
обнаружения MTU маршрута,
который описан в разделе 
 IP_PMTU_DISCOVER  

страницы руководства 
 ip (7).

 
   
 ФОРМАТ АДРЕСА 

UDP использует формат адреса IPv4 
 sockaddr_in ,

который описан в 
 ip (7).

 
   
 ОБРАБОТКА ОШИБОК 

Все фатальные ошибки будут передаваться пользователю в виде 
кода ошибки, который возвращается, даже если сокет не соединен. 
Это относится также и к асинхронным ошибкам, полученным из сети.  Вы
можете получить ошибку, относящуюся к более раннему пакету, посланному
на том же сокете.
Такое поведение отличается от поведения
многих других реализаций BSD-сокетов, которые никогда не передают коды ошибок,
если на сокете не установлено соединение.  Поведение Linux в этом
случае соответствует
 RFC1122 .

 
Для совместимости со старым кодом можно установить опцию SOL_SOCKET 
 SO_BSDCOMPAT ,

чтобы получать удаленные ошибки, только если сокет был соединен (кроме ошибок 
 EPROTO 

и 
 EMSGSIZE ).

Однако лучше исправить код, чтобы он правильно обрабатывал ошибки,
чем использовать эту опцию. 
Ошибки, возникшие локально, передаются всегда.
 
Если включена опция 
 IP_RECVERR ,

то все ошибки хранятся в очереди ошибок сокета 
и могут быть получены с помощью функции 
 recvmsg (2)

с установленным флагом 
 MSG_ERRQUEUE .

 
   
 IOCTL 

К нижеперечисленным ioctl можно обратиться с помощью
 ioctl (2).

Правильный синтаксис таков:
 

 
 int  value; 
 error  = ioctl( tcp_socket ,  ioctl_type , & value ); 
 

 

 
 SIOCINQ 

 
В качестве параметра получает указатель на целое число.  Возвращает
размер следующей ожидающей датаграммы в байтах, помещая их в это целое
число, или же 0, если нет ожидающей датаграммы.
 SIOCOUTQ 

 
Возвращает количество байт данных в локальной очереди отправки.
Поддерживается только в Linux 2.4 и выше.
 
 

Дополнительно поддерживаются все ioctl, документированные в
 ip (7)

и
 socket (7).

 
   
 КОДЫ ОШИБОК 

Все коды ошибок, описанные в 
 socket (7)

или 
 ip (7),

могут быть получены при посылке или приеме на сокете UDP. 
 
 ECONNREFUSED 

С адресом назначения не связан ни один получатель. Эта ошибка может 
быть вызвана предыдущим пакетом, посланным через этот сокет.
 
   
 ВЕРСИИ 

Опция IP_RECVERR появилась только в Linux 2.2.
 
   
 АВТОРЫ 

Эту страницу руководства написал Andi Kleen.
 
   
 СМОТРИ ТАКЖЕ 

 ip (7),

 socket (7),

 raw (7).

 
RFC768, где описан UDP.
 

RFC1122, где описаны требования к хосту.
 

RFC1191, где описан процесс обнаружения MTU маршрута.
 

 
   Index 
 
 НАЗВАНИЕ 
 ОБЗОР 
 ОПИСАНИЕ 
 ФОРМАТ АДРЕСА 
 ОБРАБОТКА ОШИБОК 
 IOCTL 
 КОДЫ ОШИБОК 
 ВЕРСИИ 
 АВТОРЫ 
 СМОТРИ ТАКЖЕ 
 
 
 
 
 
 Поиск по тексту MAN-ов:  
 
 
 
 
 
 
 
 
 
 
 


 
 


 
 
 
 
 
Спонсоры:
 
 
 
 
 
 
 
 
Хостинг:
 

 

 


 
 
 
 Закладки на сайте 
 Проследить за страницей 
 
 
Created 1996-2021 by  Maxim Chirkov 
 Добавить ,  Поддержать ,  Вебмастеру 
 
 
 
 


 
 
 






end_of_comments
#---------------------------------------

unset filename