#!/bin/bash

#. "$HOME/.bashrc"

filename="$HOME/"

echo -e "${HLIGHT}---start file: $filename---${NORMAL}" # start file

#---------------------------------------
:<<end_of_comments


 
 
 
 
 
Профиль:  Аноним  ( вход  |  регистрация ) 

 
 
 
 
 
 

 
 
 
 
  НОВОСТИ  ( + )
 
   КОНТЕНТ 
 
   WIKI 
 
    MAN'ы 
 
    ФОРУМ 
 
 Поиск  ( теги )
 
 
 

 

           
 
 

 
 
 
 
 
 
 
 [  новости  / +++  |  форум  |  wiki  |  теги 
|  
] 
 
 
 
 


 
 
 
 
 
 
 
 
 
 

 Интерактивная система просмотра системных руководств (man-ов) 
  
 
 
 

 
   Тема Набор Категория   
 

  
 Solaris man
 FreeBSD man
 Разные man
 Русские man
 Linux man
 POSIX man
 
 
	   All
	   1
	   2
	   3
	   4
	   5
	   6
	   7
	   8
	   9
 

 
 
  [ Cписок руководств  |  Печать ] 
 
 
 
 fvwm95 (1) >>  fvwm95  (1)   ( Русские man: Команды и прикладные программы пользовательского уровня ) 
 
   
 НАЗВАНИЕ 

<p>
 fvwm95 - виртуальный менеджер окон для X Window, похожий на Win95. 
 
   
 СИНТАКСИС 

 
 fvwm95   [  опции  ]
 
   
 ОПИСАНИЕ 

 
 Fvwm95  -это менеджер (программа, управляющая окнами) окон для
X Window. Он является производным от  fvwm,  который, в свою очередь,
является производным от  twm . Как и стандартный Fvwm,  Fvwm95  
совмещает два достоинства: большой виртуальный десктоп (рабочий стол, desktop)
и множество отдельных десктопов, которые могут быть использованы
по отдельности или вместе. Виртуальный десктоп позволяет Вам иметь экран
как бы большего размера, чем на самом деле, и перемещаться по нему.
Множество раздельных десктопов позволяет вам иметь как бы несколько экранов
для работы, но каждый экран полностью независим от других.
 
Fvwm95 позволяет использовать горячие клавиши, выполняющие многие функции
менеджера окон, включая перемещение и изменение размеров окон и операции
с меню.
 
Fvwm95 также имеет небольшие различия между командами конфигурации
и встроенными командами (такими, как команды управления окнами).
Команды конфигурации обычно устанавливают шрифты, цвета, клавиши,
задают содержимое меню, указывают какие функции выполняются мышью,
в то время как встроенные команды обычно делают такие вещи как,
например, активация окна. Fvwm95 не делает таких различий и позволяет
изменять что угодно и когда угодно.
 
Другие замечательные различия между Fvwm95 и прочими менеджерами
окон для X Window состоят в методах SloppyFocus и per-window focus.
SloppyFocus делает окно активным с помощью мыши, но окно не становится
неактивным, когда мышь покидает его и перемещается в главное (root) окно.
Когда SloppyFocus используется как стиль активации окон по умолчанию,
он идеально подходит для окон, в которые вы обычно ничего не вводите
(xmag, xman, xgraph, xclock, xbiff, и т.д.), так что ваше терминальное
окно не потеряет активности.
 
   
 ПРАВА 

<p>
Так как  fvwm95  является производным от  fvwm , то он разделяет
его авторские права.
 
 fvwm   copyright 1988 Evans и Sutherland Computer Corporation,
Salt Lake City, Utah, и 1989 Massachusetts Institute of Technology, Cambridge,
Massachusetts, Все права защищены. Также copyright 1993 и 1994 Robert Nation.
 
Права на использование, копирование, изменение и распостранение этого
программного обеспечения и его документации для любых целей и без
каких-либо гарантий предоставляются при условии предоставления замечения
по авторским правам на все копии и при условии, что и данное замечание
по авторским правам и данное замечание по правам на использование будет
предоставлено в документации, и кроме того, что имена Evans и Sutherland
и M.I.T. не будут использованы при рекламе и публичном представлении
при распространении данного программного обеспечения без специального
письменного разрешения.
 
ROBERT NATION, CHARLES HINES, EVANS & SUTHERLAND, AND M.I.T.
DISCLAIM ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT
SHALL EVANS & SUTHERLAND OR M.I.T. BE LIABLE FOR ANY SPECIAL,
INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING
FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
NEGLIGENCE OR OTHER TORTUOUS ACTION, ARISING OUT OF OR IN CONNECTION
WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 
   
 АНАТОМИЯ ОКНА 

 
 Fvwm  создает вокруг многих окон декоративный бордюр. Этот бордюр
содержит полоску на каждую сторону окна и маленькую L-образную секцию
в каждом углу. В добавление к этому вверху окна есть широкая полоса,
называемая заголовком (title bar) окна. На этой полосе можно разместить
до 10-ти кнопок (title-bar button). Верхние, нижние полоски и полоски
по сторонам обобщенно назваются полоски по сторонам (side-bars). Угловые
части называются рамкой.
 
Если установки по умолчанию
не были модифицированы в конфигурационных файлах, то нажав левую кнопку мыши
на заголовке окна или полоске на одной из сторон вы можете переместить
окно. Нажав левую кнопку мыши в углу рамки окна вы можете изменять его размер.
Нажав среднюю кнопку мыши (для трехкнопочной мыши; для двухкнопочной в
случае включенной эмуляции 3-й кнопки нужно нажать одновременно левую и правую
кнопки) в любом месте бордюра, получите список операций с окном.
 
Как уже говорилось, на полосе заголовка окна может существовать
до 10-ти кнопок. Их использование полностью определяется пользователем.
Конфигурация по умолчанию задает по одной кнопке на каждую сторону заголовка
окна. Кнопка слева, используется для получения списка операций с окном,
какая бы кнопка мыши ни была нажата. Кнопка справа используется для
сворачивания окна в иконку. На каждую кнопку, находящуюся на полосе заголовка
окна, пользователь может задать выполнение какой-либо функции по нажатию
кнопки мыши. См. ниже секцию конфигурационного параметра "Mouse".
 
   
 ВИРТУАЛЬНЫЙ DESKTOP 

 
 Fvwm95   предоставляет множество виртуальных desktop'ов для пользователей,
которые хотят их использовать. Экран это поле вывода на desktop'e который
  может быть больше, чем сам экран. Может быть доступно сразу несколько
различных desktop'ов (Стратегия: один desktop для каждого проекта,
или один desktop для каждого приложения, когда нужно, чтобы ясно
были видны все окна или окно приложения).Теперь, когда каждый desktop
  может быть больше, чем физический экран, можно легко видеть те окна,
которые больше размера экрана или большие группы независимых окон.
 
  Размер
  виртуальных desktop'ов может быть изменен в любое время с помощью
использования встроенной команды DeskTopSize. Все виртульные desktop'ы
могут быть разного размера. Максимально возможно число различных desktop'ов
не определено, но приблизительно составляет около 4-х миллиардов. Все окна
в на desktop'ах можно увидеть с Pager'а, который имеет миниатюрный вид desktop'ов.
Pager это специальная программа являющаяясь одним из модулей Fvwm, которая
  не является важной для управления менеджером окон. Окна могут быть также
отображены в списке, включая их геометрию, в специальном окне (window list),
доступном из всплывающего вертикального (pop-up) меню или как самомтоятельное
окно, называемое FvwmWinList (другой модуль). "Sticky"("приклеенные")
окна это окна которые находятся вне пределов виртуального desktop'а как
"Приклеенные к стеклу экранна". Они всегда остаются на экране.Это удобно
для таких программ как claock и xbiff, таким образом вам нужно только
запустить одну такую программу и она всегда останется с вами. Иконки также
могут быть "приклеены", в случае необходимости.
 
Геометрия окна определяется относительно текущего поля просмотра.
Например:
 
        xterm -geometry +0+0

 

будет всегда показывать в вверхнем левом углу видимой части экрана.
Геометрические параметры можно задать так, чтобы они определяли место
окон на виртуальном desktop'е, но вне экрана. Например, если видимый экран
имеет размер 1000 на 1000 точек и размер desktop'а 3 на 3, и текущее
поле просмотра это верхний левый угол desktop'а, то вызов
 
        xterm -geometry +1000+1000

 

поместит окно в точно вне правого нижнего угла экрана. Его можно
увидеть, если переместить мышь в правый нижний угол экрана и подождать,
пока не произойдет сдвиг экрана вниз.
 
  Это не работает в случае, если окно помещается
на desktop, отличный от текущего активного десктопа.
 
  Можно задать геометрию
окна и так:
 
        xterm -geometry -5-5

 

поместит нижний правый угол окна на 5 точек от нижнего правого угла
видимой части экрана. Не все приложения поддерживают геометрические
параметры с отрицательным смещением.
 
Некоторые приложения, которые понимают стандартные агрументы командной
строки Xt и ресурсы X, такие как xterm и xfontsel, позволяют пользователю
определять desktop, на который будет выведено окно приложения в командной
строке:
 
        xterm -xrm "*Desk:1"

 

запустит xterm на desktop'е номер 1. Не все приложения понимают
эту опцию.
 
Вы можете получить такой же результат со следующей строкой:
 
        XTerm*Desk: 1

 

 
   
 ИНИЦИАЛИЗАЦИЯ 

 
Во время инициализации,
 Fvwm   будет искать конфигурационный файл который описывает различные параметры
такие как назначение клавиатуры, задание функций мыши и др. Формат этого
файла будет описан позже. Сначала  fvwm95   ищет файл .fvwm95rc или .fvwmrc
в зависимости от того как был скомпилирован Fvwm (.fvwm95rc по умолчанию)
в домашнем каталоге пользователя. Если там этого файла нет, то  fvwm   смотрит
/usr/local/lib/X11/fvwm95/system.fvwm95rc для чтения установок по умолчанию.
Если и этот файл не найден, то  fvwm95   запустится, но его нельзя будет
использовать.
 
   fvwm95   устанавливает две переменных окружения которые будут
унаследованы его потомкомками.Это $DISPLAY и $HOSTDISPLAY. $DISPLAY описывает
дисплей, на котором запущен  fvwm95  . $DISPLAY может принимать значения
unix:0.0 или 0.0. Значение 0.0 не работает также хорошо, как unix:0.0, когда
работают через rsh на другой машине. $HOSTDISPLAY устанавливает и использует
  сетевое описание дисплея. Переменную $HOSTDISPLAY использвует протокол
  TCP/IP (каждый раз при локальном соединении), однако и $DISPLAY может
  испльзоваться при локальных соединениях, так как они можгут использовать
Unix-domain sockets, которые быстрее. <p>
   fvwm   имеет две специальные функции
  для инициальзации: InitFunction и RestartFunction, которые запускаются
соответственно во время Инициализации и Перезапуска. Они могут быть описаны
вручную в пользовательском rc файле через вызов AddToFunc (описано ниже),
и могут использоваться для старта модулей или программ, которые бы вы захотели
запустить при старте  fvwm  . <p>
 
   
 ИКОНКИ  

Базовая конфигурация  fvwm95    использует
черно-белые иконки, симулирующие twm. Если  fvwm   скомпилирован с поддержкой
XPM (а это почти наверняка), то могут использоваться цветные иконки симулирующие
ctwm, MS-Windows или Macintosh. Обычно для использования таких иконок нужен
XPM package как описано в конфигурационном Imake файле Fvwm.tmpl. Если
и SHAPE и XPM опции скопилированы, то вы можете взять цветные иконки, которые
покажутся вам более красивыми.
 
   
 МОДУЛИ  

Модули - это отдельные программы, которые
запускаются как отдельные процессы Unix, но которые передают команы  fvwm95
  для выполнения. Пользователи могут написать свои собственные модули для каких-либо
манипуляций, чтобы не интегрировать их в  fvwm95   во избежание распухания
последнего. <p>
  Модули ДОЛЖНЫ быть вызваны  fvwm95   так как он устанавливает два
канала: для  fvwm95   и модуля с которым он работает. Каналы будут уже
открыты для модуля, когда он запускается и дескрипторы файлов для каналов
предоставляются как агрументы командной строки. <p>
  Модули могут быть вызваны
 fvwm95   в любое время в течении X-сессии при помощи втроенной команды Module.
  Модули могут существовать во время X-сессии, или могут выполнятся и заканчиваться
как отдельные задачи. Если модуль еще активен, когда  fvwm95    завершает свою
работу, то  fvwm95   закрывает соединительные каналы и ждет когда придет
из модуля сигнал SIGCHLD, показывающий, что модуль определил, что канал
закрыт и закончил свою работу. Если модуль не определил, что канал закрыт
 fvwm95   закончит свою работу после ожидания приблизительно 30 секунд.
Максимальное число модулей, которое может быть запущено одновременно ограничивается
  максимальным числом одновременно открытых файлов в операционной системе
- приблизительно между 60 и 256. <p>
  Модули просто передают текстовые команды
во внутрь  fvwm  . Текстовые команды форматируются также как в случае задания
  команд для мыши в файле .fvwm95rc. Также передается некоторая дополнительная
  информация, также, как например, в модуле FvwmButtons. Модуль FvwmButtons
описывается собственной страницей man. <p>
   ICCCM COMPLIANCE   fvwm95    пытается
  быть совместимым с ICCCM 1.1. Кроме того, свойства ICCCM сделали бы возможным
для приложений принимать ЛЮБУЮ строку, в которой не содержаться "горячие"
клавиши, которые использованы в  fvwm95   и многих других менеджерах окон.
<p>
  Одно из свойств ICCCM которым обладает окно это <p>
    WMINTS(WMINTS): 
 
            Клиент принимает ввод или фокус ввода: Ложь </p>
    
 
   не должно было
бы дать фокус ввода клавиатуры оконного менеджера. Однако, эти окна могут
взять фокус ввода сами. Некоторые же приложения включают это свойство и в любом
случае еще ожидают, что оконнный менеджер даст им фокус клавиатуры, но
 fvwm95   предоставляет оконный стиль "Linience", который позволит  fvwm95
  не замечать этого правила ICCCM.
 
   
 M4 PREPROCESSING  

<p>
M4 pre-processing управляется
модулем в  fvwm95  . Для более детального описания смотрите man FvwmM4. В
кратце, если вы хотите чтобы  fvwm95   проверял ваши файлы с помощью M4,
то замените слово "Read" на "FvwmM4" в вашем файле <p>
    fvwm95 -f "FvwmM4
.fvwm2rc" 
 
    
 
   <p>
 
   
 CPP PREPROCESSING  

<p>
Cpp это препроцессор языка С.  fvwm95
  предлагает Cpp обработку, которую отражает M4 pre-processing. Для поиска
данных об этом, перечитайте секцию M4 снова, но замените "m4" на "cpp".
<p>
 
   
 AUTO-RAISE (автоматическое перемешение окна наверх)  

<p>
Окна могут быть
автоматически помещены наверх когда они принимают фокус или через некоторое
количество миллисекунд после принятия фокуса при использовании модуля FvwmAuto.
<p>
 
   
 ОПЦИИ 

<p>
Ниже приведены опции командной строки  fvwm95 :
 
 
 -f  <config command> 
 
Заставляет Fvwm использовать <config command> вместо "Read".
 
 -debug 
 
Помещает транзакции X в синхронном режиме, который ужасно медленно,
но гарантирует, что сообщения о внутренних ошибках  fvwm95   корректны.
 
 -d  displayname  
 
Управление осуществляется дисплеем "displayname" вместо
имени взятом из переменной окружения $DISPLAY.
 
 -s 
 
В много-экранном
дисплее, запускает Fvwm только на экране названном в переменной окружения
$DISPLAY или предоставленном ранее через опцию -d. Обычно  fvwm95    пытается
запуститься на всех экранах многоэкранного дисплея.
 
 -version    
 
Печатает
версию Fvwm на stderr.
 
 
   
 КОНФИГУРАЦИОННЫЙ ФАЙЛ 

Конфигурационный файл используется
для описания клавиатуры, задания функций мыши, цветов, размера вертикального
десктопа и др. Обычно конфигурационный файл называется .fvwm95rc. Используя
встроенную команду "Read", он легко читает другие заданные вами конфигурационные
файлы. <p>
  Строки начинающиеся с '#' будут игнорированы. В строках начинающихся
с '*' ожидаются команды конфигурации модуля (или команды конфигурации
для самого  fvwm95  ). <p>
   fvwm   не делает различий между командами конфигурации
и встроенными командами, таким образом любая команда, упомянутая в секции
внутренних команд может быть помещена в строку  fvwm95   для выполнения, так
как он читает конфигурационный файл, или она может быть помещена как
выполняемая команда в меню или присвоена кнопке мыши или клавише клавиатуры.
Она может использоваться пользователем и при инициализации и во время работы.
<p>
 
   
 ВСТРОЕННЫЕ ФУНКЦИИ  

 fvwm95   поддерживает некоторое количество встроенных
функций, которые могут быть присвоены клавиатуре или кнопкам мыши. Если
ожидает найти встроенную функцию в команде, но не находит ее, он проверяет
описанна ли команда, которую он встретил,но не понял в выражении типа "Function
<команда>" или "Module <команда>". Это позволяет комплексным функциям или модулям
быть вызванными способом выглядящим довольно прозрачно. <p>
  Пример: файл .fvwm95rc
содержит строку "HelpMe".  fvwm95   будет искать встроенную команду называемую
"HelpMe" и не найдет ее. Затем он будет искать заданную пользователем
комплексную функцию, названную "HelpMe". Если такая функция существует, то
 fvwm95   попытается ее выполнить. <p>
  Кавычки требуются только когда есть необходимость
заставить  fvwm95   рассматривать два и более слова как один агрумент. Однако
допускается использование кавычек и для аргумента из одного слова. Если вы
хотите заключить в кавычки символ в вашем тексте, вы должны использовать обратные
и прямые апострофы - вот так ``<символ>''. Например, если вы имеете pop-up меню
с названием Window-Ops, то кавычки вам не нужны - пишите: Popup Window-Ops,
но если вы замените символ "-" на пробел, то вам будут нужны кавычки: Popup
"Window Ops". <p>
 
 
 AddToMenu  
 
Начинает или добавляет определение меню. Обычно
определение меню выглядит где-то так: <p>
    AddToMenu Utilities "Utilities"
     Title 
 
  +<tt> </tt>&nbsp;<tt> </tt>&nbsp; "Xterm"<tt> </tt>&nbsp;<tt> </tt>&nbsp; Exec xterm -e tcsh </p>
  +<tt> </tt>&nbsp;<tt> </tt>&nbsp; "Rxvt"<tt> </tt>&nbsp;<tt> </tt>&nbsp;
     Exec rxvt </p>
  +<tt> </tt>&nbsp;<tt> </tt>&nbsp; "Remote Logins" Popup Remote-Logins </p>
  +<tt> </tt>&nbsp;<tt> </tt>&nbsp; "Top"<tt> </tt>&nbsp;<tt> </tt>&nbsp;
       Exec rxvt -T Top -n Top -e top </p>
  +<tt> </tt>&nbsp;<tt> </tt>&nbsp; "Calculator" Exec xcalc
</p>
  +<tt> </tt>&nbsp;<tt> </tt>&nbsp; "Xman"<tt> </tt>&nbsp;<tt> </tt>&nbsp; Exec xman </p>
  +<tt> </tt>&nbsp;<tt> </tt>&nbsp; "Xmag"<tt> </tt>&nbsp;<tt> </tt>&nbsp; Exec xmag </p>
  +<tt> </tt>&nbsp;<tt> </tt>&nbsp;
      "emacs"<tt> </tt>&nbsp;<tt> </tt>&nbsp; Exec xemacs </p>
  +<tt> </tt>&nbsp;<tt> </tt>&nbsp; "Mail"<tt> </tt>&nbsp;<tt> </tt>&nbsp; MailFunction xmh
"-font fixed" </p>
  <tt> </tt>&nbsp;<tt> </tt>&nbsp; ""<tt> </tt>&nbsp;<tt> </tt>&nbsp; Nop </p>
  +<tt> </tt>&nbsp;<tt> </tt>&nbsp; "Modules" Popup Module-Popup
</p>
  +<tt> </tt>&nbsp;<tt> </tt>&nbsp; ""<tt> </tt>&nbsp;<tt> </tt>&nbsp; Nop </p>
  +<tt> </tt>&nbsp;<tt> </tt>&nbsp; "Exit Fvwm" Popup Quit-Verify </p>
    
 
   Меню
может быть вызвано через <p>
    Mouse 1 R<tt> </tt>&nbsp;<tt> </tt>&nbsp; A<tt> </tt>&nbsp;<tt> </tt>&nbsp; Menu Utilities Nop 
 
    
 
   или
   <p>
    Mouse 1 R<tt> </tt>&nbsp;<tt> </tt>&nbsp; A<tt> </tt>&nbsp;<tt> </tt>&nbsp; Popup Utilities 
 
    
 
   В меню не имеется каких-либо символов
  конца меню. Меню не должны определятся в смежной области файла .fvwm95rc.
  Заключенная в кавычки порция в приведенном выше примере это метка меню, которая
будет видна в меню, когда пользователь вызовет его. Оставшаяся часть это встроеннвя
команда, которая будет вызвана если пользователь выберет этот пункт меню.
Пустая метка меню ("") и функция Nop используются для вставки разделителя
в меню.
<p>
  Если имя меню содержит подстроку, которая включает символы "@", то
ожидается, что текст между этими символами является именем файла в xpm или
xbm формате, содержащего иконку, которая будет нарисована в верхнем левом
углу меню, перемещая содержимое меню. Например: <p>
    AddToMenu " StartMenu@menu-linux.xpm @"
 
    
 
   создает меню с картинкой в левом верхнем углу. <p>
  Если имя меню содержит
подстроку, которая включает символы "^", то ожидается, что текст между этими
символами является именем цвета в X Window, который будет применен к колонке,
содержащей картинку. Например: <p>
    AddToMenu " StartMenu@menu-linux.xpm @^blue^"
 
    
 
   создает меню с картинкой в левом верхнем углу и применяет синий цвет
к колонке, содержащей картинку. <p>
  В обоих случаях имя меню - это имя получаемое
вырезанием текста из подстрок содержащих указанные символы. <p>
  Если метка меню
  содержит подстроку, которая содержит звездочки, то ожидается, что текст
между звездочками это имя файла иконки (в xpm или bitmap формате), которая
будет вставлена в меню. Например <p>
    +<tt> </tt>&nbsp;<tt> </tt>&nbsp; "Calculator*xcalc.xpm*" Exec
xcalc 
 
    
 
   вставляет пункт меню с меткой "calculator" с картинкой калькулятора
сверху метки. А в случае <p>
    +<tt> </tt>&nbsp;<tt> </tt>&nbsp; "*xcalc.xpm*" Exec xcalc 
 
    
 
   будет видна
только картинка. <p>
  Если метка меню содержит подстроку которая содержит символ
"%", то ожидается, что текст между символами процентов содержит имя файла
иконки (в xpm или bitmap формате), которая будет вставлена слева или справа
от метки меню. Например <p>
    +<tt> </tt>&nbsp;<tt> </tt>&nbsp; "Calculator%xcalc.xpm%" Exec xcalc 
 
   
 
   вставляет пункт меню с меткой "calculator" с картинкой калькулятора
справа от надписи. В случае <p>
    +<tt> </tt>&nbsp;<tt> </tt>&nbsp; "%xcalc.xpm%" Exec xcalc 
 
    
 
   будет
видна только картинка. Картинки для использования в таких случаях должны
быть маленикими (около 16x16 точек) <p>
 
 AddToFunc  
 
Начинает или добавляет описание
функции. Пример: <p>
    AddToFunc Move-or-Raise<tt> </tt>&nbsp;<tt> </tt>&nbsp; "I" Raise 
 
  +<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp; "M" Move </p>
+<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp; "D" Lower </p>
    
 
   Функция с именем Move-or-Raise может быть вызвана из
меню или через клавиатуру и мышь: <p>
    Mouse 1 TS<tt> </tt>&nbsp;<tt> </tt>&nbsp; A<tt> </tt>&nbsp;<tt> </tt>&nbsp; Move-or-Raise 
 
   Порция, заключенная в кавычки говорит, какой вид действия будет выполнять
соманду, которая следует за ней. "I" ставится для НЕМЕДЛЕННОГО выполнения,
и запуск происходит как только вызывается функция. "M" ставится для ДЕЙСТВИЯ,
т.е. если пользователь запускает перемещение мыши. "C" ставится для НАЖАТИЯ,
т.е. если пользователь нажимает и отпускает кнопку мыши в короткий период
времени. "D" ставится для ДВОЙНОГО НАЖАТИЯ. Действие "I" в этом случае будет
запущено по нажатию кнопки мыши, если функция вызывается уже с активным
окном. Специальные символы $w и от $0 до $9 доступны
в комплексных функциях, макросах или других функциях какие вы захотите
использовать для их вызова. Вместе с макросом, $w расширяется до id-окна (выражается
в шестнадцатиричной системе, например 0x10024c) того окна для которого
был вызван макрос.Символы от $0 до $9 это агрументы для макроса, таким образом
если вы вызываете <p>
    Key F10 R<tt> </tt>&nbsp;<tt> </tt>&nbsp; A Function MailFunction xmh "-font
fixed" 
 
    
 
   и MailFunction это <p>
    AddToFunc MailFunction "I" Next
[$0] Iconify -1 
 
  +<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp; "I" Next [$0] focus </p>
  +<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp; "I" None
[$0] Exec $0 $1 </p>
    
 
   То следующая строка функции становится <p>
    +<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;
       "I" None [xmh] Exec xmh -font fixed 
 
    
 
   Извлечение выполняется как
только функция запустится, таким образом вы можете использовать некоторую
функцию со всеми видами различных аргументов.Я могу использовать <p>
    Key F11
   R<tt> </tt>&nbsp;<tt> </tt>&nbsp; A Function MailFunction zmail "-bg pink" 
 
    
 
   в каком либо .fvwm95rc,
если захочу. А вот пример использования символа $w: <p>
    AddToFunc PrintFunction<tt> </tt>&nbsp;<tt> </tt>&nbsp;
   "I" Raise 
 
  +<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp; "I" Exec xdpr -id $w </p>
    
 
   Заметим,что $$ будет преобразовано
в $.
<p>
 
 Beep     
 
Так можно сделать гудок на терминале.
<p>
 
 ButtonStyle  button pixmap 
  
 
Задает декоративную фигуру что будет использоваться на какой-либо кнопке
заголовка окна.  button   это номер этой кнопки (между 0 и 9). Может быть
задана только одна иконка pixmap. <p>
    ButtonStyle 2 mini-close.xpm 
 
    
 
Спецификация pixmap должна включать полный путь или находится в каталогах,
указанных в PixmapPath. Если pixmap не найдена, то данная кнопка устанавливается
как простой чертырехугольник без pixmap. Описание номеров кнопок заголовка
окна дается ниже, в секции Mouse.
<p>
 
 ClickTime  delay  
 
Задает максимальную
  задержку (в миллисекундах) между нажатиям кнопки и ее отпусканием
для встроенной функции, которая рассматривает нажатие кнопок мыши. По умолчанию
задержка равна 150 миллисекундам.
<p>
 
 Close     
 
Если окно принимает протокол
удаления окна, то некоторое сообщение посылается окну ответившего ему для
  изящного удаления себя самого. Если окно не понимает протокол удаления
  окна, то окно уничтожаестся.
<p>
 
 ColormapFocus  [FollowsMouse | FollowsFocus] 
  
 
По умолчанию,  fvwm95   устанавливает карту цветов окна, в котором находится
  курсор. Если вы используете ColormapFocus FollowsFocus, то установленная
карта цветов будет такой же для окна, которое в данный момент имеет фокус
клавиатуры.
<p>
 
 CursorMove  horizontal vertical  
 
Перемещает указатель мыши на
horisontal страниц по X и vertical страниц по Y. Или один или оба параметра
могут быть отрицательны. И horisontal и vertical величины выражаются в процентах
страниц, таким образом "CursorMove 100 100" переместит курсор вниз и
влево на одну полную страницу. "CursorMove 50 25" переместит курсор влево
наполовину страницы и вниз на четвертую часть страницы. Функция CursorMove
не может быть вызвана из pop-up меню.
<p>
 
 DefaultColors  winfore winback titlefore 
titleback 
 
Устанавливает цветовую гамму по умолчанию. Здесь  winback   определяет
цвет фона (бордюра) всех окон, включая окна меню; /fIwinfore/fP используется
для текста меню;  titleback   задает цвет фона для полосы заголовка невыбранного
окна;  titlefore   это цвет, используемый в заголовке невыбранного окна.
<p>
 
 Delete 
   
 
Посылает сообщение окну ответившему, что оно удалит само себя, хорошо
для выхода из приложения.
<p>
 
 Desk  <arg1> <arg2>  
 
Изменяет desktop на другой.
<p>
  Если
 arg1   не нуль, то следующий номер desktop'а будет равен текущему номеру
desktop'а плюс  arg1  . Номера desktop'ов могут быть отрицательны. <p>
  Если  arg1
  ноль, то новый номер desktop'а будет равнятся  arg2  . <p>
  Номер активных desktop'ов
определяется динамически. Только desktop'ы, которые содержат окна или что
в данный момент отображены являются активными. Номера desktop'ов могут лежать
в диапазоне от 2147483647 до -2147483647 (надеюсь этого хватит?) <p>
 
 DeskTopSize 
<Horizontal> <Vertical> 
 
Задает размер виртуального desktop'а в единицах физического
размера экрана.
<p>
 
 Destroy    
 
Грубо уничтожает окно приложения.
<p>
 
 DestroyFunc 
  
 
Удаляет функцию, так что последующие ссылки на нее больше не верны. Вы можете
использлвать эту возможность для изменения содержимого функции во время сессии
 fvwm95  . Функция может быть перезадана, используя AddToFunc. <p>
    <tt> </tt>&nbsp;<tt> </tt>&nbsp;DestroyFunc
"PrintFunction" 
 
    
 
<p>
 
 DestroyMenu    
 
Удаляет меню, так что в последствии описание
для него больше не доступно. Вы можете использовать это для измениния содержимого
меню во время  fvwm95   сессии. Меню может быть перестроено при использовании
AddToMenu. <p>
    <tt> </tt>&nbsp;<tt> </tt>&nbsp;DestroyMenu "Utilities" 
 
    
 
<p>
 
 DestroyModuleConfig    
 
Удаляет
конфигурационные строки модуля, таким образом могут быть введены новые конфигурационные
строки вместо старых. Вы можете использовать данную возможность как способ
запуска модуля во время  fvwm95   сессии без перезапуска самого  fvwm95  . Можно
использовать шаблоны для замены части имени. <p>
           DestroyModuleConfig
FvwmFormFore 
 
         DestroyModuleConfig FvwmButtons* </p>
    
 
<p>
 
 EdgeResistance 
scrolling moving 
 
Говорит как жестко будет изменятся поле простотра desktop'а
при перемещении мыши вверх к пределу экрана и как жестко будет перемещаться
  окно вверх к пределу экрана.
<p>
  Первый параметр говорит сколько миллисекунд
указатель мыши должен удерживаться на границе экрана перед тем как
 fvwm95   изменит поле просмотра. Это предназначается для людей использующих
  "EdgeScroll 100 100", и которых самих достает случайный сдвиг страниц,
когда они этого не хотят. <p>
  Второй параметр говорит на какое количество точек
вверх за границу экрана должна быть перемещена граница окна перед действительными
  перемещениями частично отключенного экрана. <p>
  Заметим, что с "EdgeScroll
0 0", он замедлит возможность перемещать окно или изменять размер окна
через границу текущего экрана. При задании первого парамертра в EdgeResistance
10000 этот тип действия станет невозможен. С EdgeResistance меньше, чем
10000, но больше 0 перемещение страниц выше становится трудным, но не невозможным.
<p>
 
 EdgeScroll  horizontal vertical  
 
Задает процентную долю страницы для скроллинг,
когда курсор встает на границу страницы. Если вы не хотите попадать на другие
страницы или делать скроллинг когда вы находитесь на границе страницы,
то вам нужно включить строку "EdgeScroll 0 0" в ваш файл .fvwm95rc. Если вы
хотите пустые страницы используйте "EdgeScroll 100 100". Оба параметра
и  horisontal   и  vertical   должны быть положительными числами.
<p>
  Если  horisontal
  и  vertical   заданы больше 1000, то скроллинг будет обрезаться вокруг
границы desktop'а. Если использвано "EdgeScroll 100000 100000",  fvwm95  
  будет делать скроллинг пустых страниц обрезая их вокруг границы desktop'а.
<p>
 
 Exec  command  
 
Выполняет  command  . Exec не требует добавления 'exec'.
<p>
  Следующий
  пример назначает функциональную клавишу F1 в главное окно, без модификаторов,
для выполнения функции. Программа rxvt будет запущена с представленными
агрументами. <p>
    Key F1 R N Exec rxvt -fg yellow -bg blue -e /bin/tcsh 
 
  
 
   <p>
 
 ExecUseShell  [shell]  
 
Задает команде Exec использование определенного
shell, или значени переменной окружения $SHELL, если не задан этот параметр,
вместо shell по умолчанию (/bin/sh). <p>
    ExecUseShell 
 
  ExecUseShell /usr/local/bin/tcsh
</p>
    
 
<p>
 
 Focus    
 
Делает поле просмотра или окно видимым выбранным окном. Помещает
  фокус ввод клавиатуры в выбранное окно. Помещает окно поверх остальных если
это необходимо для того чтобы окно стало видимым. Помещает указатель в
выбранном окне в режим focus-follows-mouse. Не разворачивает окно из иконки.
<p>
 
 Function  FunctionName  
 
Используется для назначения предварительно определенной
функции клавиатуре или кнопке мыши.
<p>
  Следующий пример назначает левую
кнопку мыши для вызова функции "Move-or-Raise", чье определение было предоставлено
в примере выше. После выполнения этого разначения  fvwm95   будет выполнять
функцию Move-or-Raise как только левая кнопка мыши будет нажата на полосе
заголока окна. <p>
    Mouse 1 T A Function Move-or-Raise 
 
    
 
   Ключевое слово
"Function" может быть опущено если FunctionName не совпадает с именем
какой-либо встроенной функции  fvwm95  . <p>
 
 GotoPage  x y  
 
Перемещает поле просмотра
desktop'а на страницу с координатами (x,y). Верхняя левая страница это (0,0),
верняя правая (N,0), где N это число меньшее, чем текущее число горизонтальных
страниц, описанное в команде DeskTopSize. Левая нижняя страница это (0,M)
и нижняя правая страница это (N,M), где M это вертикальный размер desktop'а
как задано в команде DeskTopSize. Функция GotoPage не может быть использована
в pop-up меню.
<p>
 
 HilightColor  textcolor backgroundcolor  
 
Задает цвета текста
и фона для оформления окна, которое находится в данный момент в фокусе
клавиатуры.
<p>
 
 IconFont  fontname  
 
Говорит  fvwm95   использовать шрифт fontname
для пометки иконок. Если этот параметр опущен, то будет использован шрифт
меню (заданный через конфигурационный параметр MenuFont)
<p>
 
 Iconify  [value] 
  
 
Сворачивает окно в иконку если оно уже не свернуто или разворачивает обратно
если оно уже свернуто. Если необязательный аргумент value положителен,
то только свертывание будет допустимо. Если он отрицателен, то допустимо
будет только развертывание.
<p>
 
 IconPath  path  
 
Задает раздельный список полных
  имен директорий, где могут находится одноцветные иконки (bitmap). Каждое
имя директории должно начинаться со слэша. Могут быть использованы переменные
окружения (т.е. $HOME или ${HOME}).
<p>
  Замечание: Если используется FvwmM4
  для проверки ваших rc файлов, то m4 может захотеть зарубить вам слово "include",
которое возможно будет указано в команде IconPath или PixmapPath. Для устранения
этого добавьте undefine(`include') перед командой IconPath или лучше используйте
опцию '-m4-prefix' для того, чтобы все директивы m4 имели перификс "m4 (см.
man FvwmM4).
 
 Key  keyname Context Modifiers Function  
 
Назначает клавише клавиатуры
опеределенную встроенную функцию  fvwm95  . Присвоение происходит также как
для мыши за исключением того, что номер кнопки мыши заменяется на имя
клавиши. keyname может быть задано как одно из имен определенных в /usr/include/keysymdef.h,
  с опущенным XK. Поля context и Modifiers задаются также как и для мыши.
<p>
  Следующий пример назначает всплытие списка окон по нажатию Alt-Ctrl-Shift-F11:
   <p>
    Key F11 A SCM WindowList 
 
    
 
   <p>
  Назначение клавиши для кнопки в
  полосе заголовка окна не говорит, что кнопка покажется, если также не
существует назанчение этой кнопки для мыши. <p>
 
 KillModule  name  
 
Заставляет
модуль, которой был вызван с именем name совершить самоубийство ;). name может
включать шаблон (wild-cards).
<p>
 
 Lower     
 
Позволяет пользователю опустить окно
вниз.
<p>
 
 Maximize  [horizontal vertical]  
 
Без этих необязательных аргументов
Maximize заставляет окно переключаться из полноэкранного размера в его нормальный
размер и обратно.
<p>
  С необязательными аргументами horisontal и vertical,
которые выражаются как процентные доли полного экрана, пользователь может
контролировать новый размер окна. Если horisontal больше чем ноль, то размер
окна по горизонтали будет установлен в horisontal*screenidth/100. Аналогично
  и по вертикали. Следующий пример добавит кнопку в полосе заловка окна для
переключения окна в полный размер экрана по вертикали: <p>
    Mouse 0 4
A Maximize 0 100 
 
    
 
   Следующий пример заставит окна переключаться
в полный размер по горизонтали: <p>
    Mouse 0 4 A Maximize 100 0 
 
    
 
   Эта
строка делает окно размеров в половину размера экрана в каждом направлении:
   <p>
    Mouse 0 4 A Maximize 50 50 
 
    
 
   Величины больше чем 100 можно использовать,
но осторожно. <p>
  Если буква "p" добавляется к каждой координате (horisontal
и/или vertical), то это говорит о том, что величины параметров заданы в точках.
<p>
 
 Menu  menu-name double-сlick-action  
 
Заставляет всплыть заданное ранее
pop-up меню в манере "sticky". То есть, если пользователь вызывает меню по
нажатию кнопки вместо вызова из другого меню, то меню всегда будет вверху.
  Команда double-click-action будет вызвана если пользователь сделал двойное
нажатие при вызове меню.
<p>
 
 MenuFont  fontname  
 
Говорит  fvwm95   использовать шрифт
 fontname   для пунктов меню. Если опущено, то будет использоваться шрифт fixed.
<p>
 
 Module  ModuleName  
 
Задает модуль который будет вызван во время инициализации.
В настоящее время доступны следующие модули (включая модули  fvwm95  ): FvwmAudio
(издаются звуки при действиях менеджера окон), FvwmAuto (модуль автоматического
вытаскивания окна на верх), FvwmBacker (для изменения цвета фона когда происходит
изменение desktop'ов), FvwmBanner (для отображения XPM), FvwmButtons
  (создает настраиваемую панель инструментов), FvwmCpp (для предобработки
вашего .fvwm95rc с использованием Cpp), FvwmIdent (для получения информации
об окне), FvwmM4 (для предобработки вашего .fvwm2rc с помощью m4), FvwmPager
(мини версия десктоп'а), FvwmSave (записывает состояние desktop'а в стиле
.xinitrc), FvwmSaveDesk (записывает состояние десктопа в командах  fvwm95
 ), FvwmScroll (помещает полосу скроллинга в некоторые окна), FvwmTalk
(для интерактивного запуска команд  fvwm95  ), FvwmTaskBar (панель задач
как в Win95) и FvwmWinList (список окон). Эти модули имеют свои страницы
в man. Могут быть и другие модули.
<p>
  Модули могут быть транзитными программами
с короткими временем жизни или как FvwmButtons могут работать во время
всей X сессии. Модули будут уничтожены менеджером окон при презапуске или
выходе, если это будет возможно. Смотрите секцию introdution по модулям.
Ключевое слово "module" может быть опущено если ModuleName легко отличимо
от всех встроенных имен и имен функций. <p>
 
 ModulePath    
 
Задает раздельный список
путей для поиска модулей  fvwm95  . Могут использоваться переменные окружения
(т.е. $HOME или ${HOME}).
<p>
 
 Mouse  Button Context Modifiers Function  
 
Описывает
присвоение действий для мыши.  Button   это номер кнопки мыши. Если Button нуль,
то некоторая кнопка будет выполнять специальную функцию. Context описывает
  область применения присвоенного действия. Допустимые значения context
следующие: R - для главного окна, W - для окна приложения, T - для полосы
заголовка окна, S - для бордюра окна, F - для углов окна. I - для Icon окна
и от 0 до 9 для кнопок на полосе заголовка окна. Возможны и комбинации этих
букв. A - для любых context исключая кнопки заголовка окна. Для примера, context
FST будет работать, когда мышь находится где-нибудь на бордюре окна, исключая
кнопки на полосе заголовка окна.
<p>
   Modifiers   - это любые комбинации из
букв: N - без модификаторов, S - для shift, M - для Meta, C - для Сtrl или A
- для всех. Например, модификатор SM будет работать, когда будут нажаты
  вместе клавиши Meta и Shift. X11 модифицирует от mod1 до mod5, которые представляются
как цифры от 1 до 5. <p>
   Function   это одна из функций  fvwm95  . <p>
  Кнопки на
полосе заголовка окна нумеруются с нечетными номерами слева и с четными
справа от заголовка окна.Кнопки с меньшими номерами располагаются ближе
к границам окна. Смотрите как указано ниже <p>
    1 3 5 7 9<tt> </tt>&nbsp;<tt> </tt>&nbsp;0 8 6 4 2 
 
    
 
  <p>
 
 Move  [ x y ]  
 
Позволяет пользователю перемещать окно. Если вызов происходит
где-нибудь в окне или на бордюре окна, то оно будет перемещено. Если вызов
происходит из главного окна, то пользователю будет позволено выбрать окно
для перемещения.
<p>
  Если представлены необязательные аргументы x и y, то
окно будет перемещено таким образом, чтобы его верхний левый угол находился
в положении (x,y). x и y - это процентные доли экрана, но если к каждой
координате добавлена буква "p", то в этом случае координаты задаются в точках.
<p>
  Примеры: <p>
    Mouse 1 T A Move 
 
  Mouse 2 T A Move 10 10 </p>
  Mouse 3 T A Move
10p 10p </p>
    
 
   В первом примере пользователь будет перемещать окно в интерактивном
режиме, во втором, окно, чей заголовок был выбран будет перемещено так, чтобы
его левый верхний угол находился в положении 10% по ширине и 10% по высоте
экрана. Третий пример аналогичен первому, только положение окна задатеся
точками а не процентами. <p>
 
 Nop     
 
Ничего не делает. Используется доя вставки
пустой строки или разделителя в меню. Если пунк меню задан как Nop " ",
то вставляется пустая линия, а если Nop "", то вставляется разделитель. Может
также быть использован как для меню при двойном щелчке мыши.
<p>
 
 Next  [conditions] 
command 
 
Выполняет command (обычно Focus) для следующего окна отвечающего
всем conditions (условиям). Условия включают "iconic","!iconic","CurrentDesk",
"Visible","!Visible" и "CurrentScreen". В добавление, условие может включать
имя окна. Имя окна же может включать шаблон (символы "*" и "?"). Имя окна,
класс и ресурс будут рассмотрены, при попытке дальнейшего поиска окна.
<p>
 
 None  [conditions] command  
 
Выполняет command (обычно Focus) для следующего
окна отвечающего всем conditions (условиям). Условия включают "iconic","!iconic","CurrentDesk",
"Visible","!Visible" и "CurrentScreen". В добавление, условие может включать
имя окна. Имя окна же может включать шаблон (символы "*" и "?"). Имя окна,
класс и ресурс будут рассмотрены, при попытке дальнейшего поиска окна.
<p>
 
 OpaqueMoveSize  percentage  
 
Говорит  fvwm95   максимальный размер окна,
с которым было бы использовано перемещение окна как сплошного. Percentage
- это процентная доля всей экранной области. С "OpaqueMove 0" все окна будут
перемещены с использованием традиционного растягивающего контура. С "OpaqueMove
100" все окна будут перемещаться как сплошные. По умолчанию установлено
   "OpaqueMove 5", что позволяет перемещать маленькие окна целиком, а
большие с помощью растягивающегося контура.
<p>
 
 PipeRead  cmd  
 
Заставляет  fvwm95
  читать команды выведенные из программы с именем  cmd  . Полезно для построения
динамических меню, основанных, например, на содержимом директории.
<p>
 
 PixmapPath 
path 
 
Задает раздельный список путей, где будут искаться цветные pixmap
  иконки. Каждый путь должен начинаться со слэша. Допускается использование
переменных окружения (т.е. $HOME or ${HOME}).
<p>
 
 Popup  PopupName  
 
Выполняет
две функции: назначает меню клавише или кнопке мыши, и назначает подменю
в меню. Форматы для этих двух функций различаются слабо.
<p>
  Для назначения
определенного ранее pop-up меню клавише или кнопке мыши: <p>
  Следующий пример
назначает кнопки мыши 2 и 3 для вызова pop-up меню "Window Ops". Меню будет
вызвано если будут нажаты кнопки 2 или 3 в углах окна, на сторонах окна или
в полосе заголовка, без модификаторов (ctrl, shift или meta). <p>
    Mouse
2 FST N Popup "Window Ops" 
 
  Mouse 3 FST N Popup "Window Ops" </p>
    
 
   Pop-up
меню могут быть назначены клавишам и при использовании встроенной функции
Key. Pop-up меню могут быть вызваны без использования мыши при назначении
клавиш и с ними можно работать используя клавиши up, down и enter. <p>
Для
назначения заданных ранее pop-up меню другим меню, используйте подменю:
  <p>
  Следующий пример задает подменю "QuitVerify" и назначает его в главное
меню,названное "RootMenu": <p>
    AddToMenu Quit-Verify "Really Quit Fvwm?"
Title 
 
  +<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp; "Yes, Really Quit"<tt> </tt>&nbsp;<tt> </tt>&nbsp;Quit </p>
  +<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp; "Restart Fvwm2"<tt> </tt>&nbsp;<tt> </tt>&nbsp; <tt> </tt>&nbsp;<tt> </tt>&nbsp;Restart fvwm2
</p>
  +<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp; "Restart Fvwm 1.xx" <tt> </tt>&nbsp;<tt> </tt>&nbsp;Restart fvwm </p>
  +<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp; ""<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;Nop </p>
  +<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp; "No, Don't
Quit"<tt> </tt>&nbsp;<tt> </tt>&nbsp; <tt> </tt>&nbsp;<tt> </tt>&nbsp;Nop </p>
  
 
  AddToMenu RootMenu "Root Menu" Title 
 
  + "Open an XTerm Window"
  Popup NewWindowMenu </p>
  + "Login as Root"<tt> </tt>&nbsp;<tt> </tt>&nbsp; Exec xterm -fg green -T Root -n
Root -e su - </p>
  + "Login as Anyone" Popup AnyoneMenu </p>
  + "Remote Hosts"<tt> </tt>&nbsp;<tt> </tt>&nbsp;
  Popup HostMenu </p>
  + ""<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp; Nop </p>
  + "X utilities"<tt> </tt>&nbsp;<tt> </tt>&nbsp; Popup Xutils
</p>
  + ""<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp; Nop </p>
  + "Fvwm Modules"<tt> </tt>&nbsp;<tt> </tt>&nbsp; Popup Module-Popup </p>
  + "Fvwm Window
Ops" Popup Window-Ops </p>
  + ""<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp; Nop </p>
  + "Previous Focus"<tt> </tt>&nbsp;<tt> </tt>&nbsp; Prev
[*] Focus </p>
  + "Next Focus"<tt> </tt>&nbsp;<tt> </tt>&nbsp; <tt> </tt>&nbsp;<tt> </tt>&nbsp; Next [*] Focus </p>
  + ""<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp; Nop </p>
  +
"Refresh screen"<tt> </tt>&nbsp;<tt> </tt>&nbsp; Refresh </p>
  + "Recapture screen" Recapture </p>
  + ""<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;
         Nop </p>
  + "Reset X defaults" Exec xrdb -load $HOME/.Xdefaults
</p>
  + ""<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp; Nop </p>
  + ""<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp; Nop </p>
  + "Quit"<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp; Popup Quit-Verify </p>
    
 
    <p>
Popup отличается от Menu в том, что pop-up меню не остаются если пользователь
нажмет кнопку мыши. При стиле Twm, вы долны удерживать кнопку и выбирать пункты
меню перемещая мышь. Menu предоставляет меню в стиле Motif или Microsoft-Windows.
<p>
 
 Prev  [conditions] <command>  
 
Выполняет command (обычно Focus) для предыдущего
окна отвечающего всем conditions (условиям). Условия включают "iconic","!iconic","CurrentDesk",
"Visible","!Visible" и "CurrentScreen". В добавление, условие может включать
имя окна. Имя окна же может включать шаблон (символы "*" и "?"). Имя окна,
класс и ресурс будут рассмотрены, при попытке дальнейшего поиска окна.
<p>
 
 Quit     
 
Выход из  fvwm95  , и обычно и из X тоже.
<p>
 
 Raise     
 
Позволяет пользователю
поднять окно на верх.
<p>
 
 RaiseLower    
 
Попеременно опускает окно вниз или поднимает
наверх.
<p>
 
 Read  filename  
 
Заставляет  fvwm95   читать команды из файла с именем
filename.
<p>
 
 Recapture    
 
Заставляет  fvwm95   переинициализировать все в данных
окнах. Это необходимо чтобы были использованы более поздние параметры стиля.
Операция переинициальзации заметно медленная.
<p>
 
 Refresh    
 
Заставляет все
окна на экране перерисовать самих себя.
<p>
 
 Resize  [x y]  
 
Позволяет пользователю
изменять размер окна.
<p>
  Если представлены необязательные агрументы x и y,то
размеры окна будут изменены так чтобы соответствовать размеру x на y, где
x и y это процентные доли экрана, исключая использование буквы "p", ибо
тогда координаты берутся в точках. <p>
 
 Restart  WindowManagerName  
 
Заставляет
 fvwm95   перезапускать самого себя если WindowManagerName это "fvwm95"
или переключаться в альтернативный менеджер окон если он указан. Если
менеджер окон не находится в пути поиска, заданном по умолчанию, то вы
должны использовать полное имя WindowManagerName.
<p>
  Это команда не допускает
  использование амперсанда или переменных окружения. В примерах ниже два
первых неправильные, но третий OK: <p>
    Key F1 R N Restart fvwm & 
 
  Key F1
R N Restart /bin/fvwm </p>
  Key F1 R N Restart /home/nation/bin/fvwm
</p>
    
 
   <p>
 
 SendToModule  modulename string  
 
Посылает произвольную строку (кавычки
не требуются) всем модулям, совпадающим с  modulename  , которое может содержать
шаблоны. Это дает эффект только если модуль понимает данные строки и может
работать с ними. Может быть использовано для обмена информацией между модулями
или реализации в модулях более комплексных команд.
<p>
 
 Scroll  horizontal vertical 
  
 
Прокручивает поле просмотра виртуального desktop'а на horisontal страниц
по оси x и vertical страниц по y. Один или оба параметра могут быть отрицательными
  и выражают процентные доли страниц, так что "Scroll 100 100" соответствует
прокрутке на одну полную страницу вниз и влево. "Scroll 50 25" соответствует
прокрутке на половину страницы влево и на четверть страницы вниз. Функция
прокрутки не может быть вызвана из pop-up меню. Обычно прокрутка останавливается
по достижении границ desktop'а.
<p>
  Если horisontal и vertical больше, чем
1000, то прокрутка все равно будет происходить до границы desktop'а. Если
"Scroll 100000 0" выполняется дальше и дальше, то  fvwm95   будет перемещать
на следующую страницу desktop'а при каждом выполнении и будет останавливаться
на границе desktop'а, таким образом каждая страница попадает в оборот. <p>
  Если
буква "p" добавлена к координате, то она рассматривается не в процентах
а в точках. <p>
 
 Stick    
 
"Приклеевает" окно, если оно еще не "приклеено" или отклеивает
в противном случае.
<p>
 
 StickyColors  textcolor backgroundcolor  
 
Определяет
цвета текста и фона для заголовка окна приклеенных (sticky) окон.
<p>
 
 Style 
windowname options 
 
Эта команда заменяет такие старые глобальные команды
в Fvwm версий 1.xx как NoBorder, NoTitle, StartsOnDesk, Sticky, StaysOnTop,
  Icon, WindowListSkip, CirculateSkip, SuppressIcons, BoundaryWidth,
NoBoundaryWidth, StdForeColor, и StdBackColor на одну мощную и понятную
команду. Эта команда используется для установки определенных аттрибутов
окна или установки стилей менеджера окон по умолчанию.
<p>
   windowname   может
  быть именем окна, классом или строкой ресурса и может содержать шаблоны
('*','?'), которые используются в именах фалйов Unix. <p>
  Заметим - окнам которые
  не имеют имени (WMAME) дается имя "Untitled", а окнам которые не
имеют класса (WMLASS, res_class) дается Class="NOClass" и наконец окнам
что не имеют ресурса (WMLASS, res_name) дается Resource = "NoResource".
<p>
   options   - это раздельный список команд содежащий некоторые или все ключевые
  слова: BorderWidth, HandleWidth, NoIcon/Icon, TitleIcon, IconBox, NoTitle/Title,
NoHandles/Handles, WindowListSkip/WindowListHit, CirculateSkip/CirculateHit,
StaysOnTop/StaysPut, Sticky/Slippery, StartIconic/StartNormal, ForeColor,
BackColor, StartsOnDesk/StartsAnyWhere, IconTitle/NoIconTitle, MWMDecor/NoDecorHint,
MWMFunctions/NoFuncHint, HintOverride/NoOverride, NoButton/Button, OLDecor/NoOLDecor,
StickyIcon/SlipperyIcon, SmartPlacement/DumbPlacement, RandomPlacement/ActivePlacement,
DecorateTransient/NakedTransient, SkipMapping/ShowMapping, UseStyle, NoPPosition/UsePPosition,
Lenience/NoLenience, MouseFocus|FocusFollowsMouse/SloppyFocus/ClickToFocus.
<p>
  Вышеперечисленный список некоторых опций дан как опция-стиля/противоположная-опция-стиля.
   Противоположная-опция-стиля используется  fvwm95   по умолчанию и нужна
только если вы переопределили установки по умолчанию. <p>
  Icon берется как
  строчный (без кавычек) агрумент, который является именем файла формата
pixmap или bitmap. <p>
  IconBox имеет 4-ре числовых аргумента: <p>
    IconBox
  l t r b 
 
    
 
   Где l - левая координата, t - верхняя, r -правая и b - нижняя.
   Отрицательные координаты показывают расстояние от правого или нижнего
краев экрана. Сам же IconBox - это окно на экране куда Fvwm будет пытаться
поместить иконки так чтобы они не закрывали другие. <p>
  StartsOnDesk имеет
  числовой агрумент - это номер desktop'а, на который будет помещено окно
при инициализации. Заметим, что стандартные Xt программы могут также определять
данный параметр через ресурс (т.е. "-xrm '*Desk: 1'"). BorderWidth имеет
числовой аргумент который является шириной бордюра окна, если оно не имеет
resize-handles. <p>
  HandleWidth имеет числовой аргумент, который является шириной
бордюра для помещения окна, если оно не имеет resize-handles. <p>
  Button и
NoButton имеют числовой аргумент , который является номером кнопки полосы
заголовка окна, что может быть опущена или включена. <p>
  StickyIcon делает
окно "приклеенным", когда оно свернуто в иконку. Оно будет развернуто наверх
активного desktop'а. <p>
  MWMDecor говорит  fvwn95   попытаться определить и использовать
рекомендации по оформлению mwm'а. Это иногда используют нектоторые приложения.
<p>
  MWMFunctions говорит  fvwm95   попытаться определить и использовать рекомендации
mwm'а по запрещенным операциям, что иногда используется приложениями. HintOverride
говорит  fvwm95   не использовать опрерации, которые были бы запрещены в mwm,
но  fvwm95   все равно позволяет выполнять эти операции. <p>
  OLDecor говорит  fvwm95
  пытаться определить и использовать рекомендации olwm и olvwm, что используют
многие старые приложения XView и OLIT. <p>
  UseStyle имеет один аргумент который
является именем другого стиля. Этот путь позволяет вам не связывая имена окон,
легко наследовать одинаковые черты не вводя их повторно. Например: 'Style
"rxvt" UseStyle "XTerm"'. <p>
  SkipMapping говорит fvwm95 не переключать окно
на другой desktop, когда происходит его инициализация (полезно с StartsOnDesk).
<p>
  Lenience говорит fvwm95 игнорировать преобразование в ICCCM, которое состоит
в том, что если приложение устанавливает поле ввода структуры wm_hints в False,
то оно никогда не хочет, чтобы оконные менеджер давал ему фокус ввода. Из
приложений которые нуждаются в этом, мне известны только sxpm и что является
глупым багом с тривиальным исправлением и не имеет специального эфекта на
программу в любом случае. Наверное некоторые старые приложнния тоже имеют
эту проблему. <p>
  ClickToFocus говорит fvwm95 дать фокус окну, когда внутри
него нажата кнопка мыши. MouseFocus (или его псевдоним FocusFollowsMouse)
говорит fvwm95 дать окну фокус как только указатель будет введен в окно. Обычно
установлен SloppyFocus, но он не дает фокус если указатель покидает окно
перемещаясь в главное окно или в окно ClickToFocus (пока вы не нажмете на
нем кнопку мыши), что делает возможным перемещать мышь без потери фокуса.
<p>
  NoPPosition говорит  fvwm95   игнорировать поле PPosition, когда добавляются
новые окна. Приверженность к полю PPosition требуется для некоторых приложений,
но если вы не имеете одного из них, это доставляют головную боль. <p>
  RandomPlacement
говорит создаваемому окну не требовать у пользователя разместить его на
  экране, а разместится самостоятельно используя случайные координаты. Для
лучшей работы используйте и RandomPlacement и SmartPlacement. <p>
  SmartPlacement
говорит создаваемому окну разместится самостоятельно, используя для окна
  незанятое другими окнами пространство на desktop'е. Если такового не окажется,
то пользователю придется разместить окно самому или вызовется RandomReplacement,
если он был задан. Для лучшей работы используйте и RandomPlacement
и SmartPlacement. <p>
  Например: <p>
так чтобы окна 
 
по умолчанию. </p>
  Style "*" NoTitle,Icon unknown1.xpm, BorderWidth 4,HandleWidth
5 </p>
  
 
  Style "Fvwm*" NoHandles,Sticky,WindowListSkip,BorderWidth
0 
 
  Style "Fvwm Pager"<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp; StaysOnTop, BorderWidth 0 </p>
  Style "*lock"
   NoHandles,Sticky,StaysOnTop,WindowListSkip </p>
  Style "xbiff"<tt> </tt>&nbsp;<tt> </tt>&nbsp; Sticky,<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;
WindowListSkip </p>
  Style "FvwmButtons" NoHandles,Sticky,WindowListSkip </p>
  Style
"sxpm"<tt> </tt>&nbsp;<tt> </tt>&nbsp; NoHandles </p>
  Style "makerkit" </p>
  
 
только дял xterms! 
 
  Style "xterm" Title, Color black/grey </p>
  
 
  Style
"rxvt"<tt> </tt>&nbsp;<tt> </tt>&nbsp; Icon term.xpm 
 
  Style "xterm" Icon rterm.xpm </p>
  Style "xcalc"
       Icon xcalc.xpm </p>
  Style "xbiff" Icon mail1.xpm </p>
  Style "xmh"<tt> </tt>&nbsp;<tt> </tt>&nbsp;
  Icon mail1.xpm, StartsOnDesk 2 </p>
  Style "xman"<tt> </tt>&nbsp;<tt> </tt>&nbsp; Icon xman.xpm </p>
  Style "matlab"
      Icon math4.xpm, StartsOnDesk 3 </p>
  Style "xmag"<tt> </tt>&nbsp;<tt> </tt>&nbsp; Icon magnifyinglass2.xpm
</p>
  Style "xgraph" Icon graphs.xpm </p>
  Style "FvwmButtons" Icon toolbox.xpm
</p>
  Style "Maker" StartsOnDesk 1 </p>
  Style "signal" StartsOnDesk
3 </p>
    
 
   Заметим, что все свойства окон будут всегда складываться. В вышепреведенном
  примере "FvwmPager" берет свойство StaysOnTop через имя окна, но также
берет NoHandles, Sticky и WindowListSkip из "Fvwm*". Он также возмет свойство
NoTitle так как оно определено для "*". Если определены стили, которые
конфликтуют, то будет использовано последнее определение. <p>
  Если установлен
аттрибут NoIcon то заданные окна будут просто исчезнет при сворачивании.
  Окно может быть восстановлено через окно списка. Если установлен аттрибут
Icon без аргумента, то аттрибут NoIcon очищается, но иконка не задается.
Вот пример, который позволяет иметь иконку только модулю FvwmPager: <p>
   Style "*" NoIcon 
 
  Style "Fvwm Pager" Icon </p>
    
 
   <p>
 
 Title     
 
Ничего не делает.
Используется для вставки строки заголовка в popup меню.
<p>
 
 WarpToWindow x 
y    
 
Помещает курсор для соответствующего окна. Параметры x и y по умолчанию
определяют процентную долю опускания окна из верхнего левого угла (или
число точек, если 'p' добавляется к цифрам).
<p>
 
 Wait  name  
 
Это встроенная функция
предназначается для использования только в функциях  fvwm95  . Она выполняет
функцию ожидания пока выводится новое имя окна name.  fvwm95   остается полность
  работоспособным во время ожидания. Это полезно при использовании InitFuction
если вы пытаетесь запустить окно на специфичном desktop'е: <p>
    AddToFunc
InitFunction "I" exec xterm -geometry 80x64+0+0 
 
  +<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp; "I" Wait xterm
</p>
  +<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp; "I" Desk 0 2 </p>
  +<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp; "I" Exec xmh -font fixed -geometry
507x750+0+0 </p>
  +<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp; "I" Wait xmh </p>
  +<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp; "I" Desk 0 0 </p>
    <p>
   В приведенной
  выше функции запускается xterm на текущем desktop'е, ждет пока он отобразит
сам себя, затем переключается на desktop 2 и запускает xmh. После xmh управление
переключается на desktop 0.
<p>
 
 WindowList  options  
 
Создает и показывает pop-up
меню, в котором видны заголоки и геометрия каждого из окон, которые отображены
на desktop'е. Геометрия свернутых окон показывается в "подпорке". Выбор пункта
меню из этого окна заставит окно переместится на desktop,если оно в данный
момент не на текущем desktop'е, то поле просмотра переместится на тот
desktop, где находится верхний левый угол данного окна, если оно свернуто
в иконку,то будет развернуто, и будет помещено поверх других окон на desktop'е.
Команда WindowList может иметь необязательный список аргументов из одной
или нескольких, указанных ниже опций разделенных пробелами:
<p>
   ShowAllDesks
  - будут показаны все окна на всех desktop'ах (исключая те что помечены как
WindowSkipList). Установлено по умолчанию. <p>
   ShowCurrentDesk   - будут показаны
только окна на текущем desktop'е. <p>
   ShowDesk n   - будут показаны только окна
на desktop'е с номером  n  . <p>
   ShowGeometry   - когда задано, то к списку окон
будет добавлены из геометрические параметры. По умолчанию отключено. <p>
   UseWindowNames
  - в списке окон будут использоваться их имена (которые на полосе заголовка).
Установлено по умолчанию. <p>
   UseIconNames   - имя иконки используется вместо
имени окна. <p>
 
 WindowFont  fontname  
 
Говорит fvwm95 использовать фонт fontname
вместо "fixed" для заголовков окон.
<p>
 
 WindowsDesk  new_desk  
 
Перемещает выбранное
окно на desktop заданный как new_desk.
<p>
 
 XORvalue  число 
 
Изменяет значение битов для задания цвета растягивающейся рамки,
получающейся при изменении размера или перемещении окна.
<p>
 
 +    
 
Используется для добавления следующей
заданной функции или меню. См. AddToFunc и AddToMenu.
 
 
   
 КЛАВИАТУРНЫЕ УСКОРИТЕЛИ 

Все (или почти все) операции менеджера окон могут быть выполнены с
помощью клавиатуры, таким образом, возможно выполнение операций в отсутствии
мыши. Добавим, что для прокрутки по виртуальному desktop'у могут быть назначены
клавиши также как и для функций move, resize вызова меню и многих других.
Для этого могут быть использованы модифкаторы задействующие клавиши shift,
ctrl. Однажды встроенная функция запускается и указатель перемещается, используя
клавиши up, down, left, и right, и завершая действие нажатием return. Удерживая
нажатой клавишу shift можно заставить указатель перемещаться большими шагами,
а удерживая клавишу ctrl можно заставить указатель перемещаться меньшими
шагами. Стандартное управление перемщением курсора в emacs и vi это (^n, ^p,
^f, ^b, и ^j, ^k, ^h, ^l) может быть использовано вместо стрелок. <p>
  <p>
 
   
 СТАНДАРТНАЯ КОНФИГУРАЦИЯ  

Простой конфигурационый файл .fvwm95rc поставляется в дистрибутиве
  fvwm95. Внутри довольно хорошо все описано и может быть использовано в качестве
исходной конфигурации fvwm95. <p>
  <p>
 
   
 ИСПОЛЬЗОВАНИЕ СОБСТВЕННЫХ МНОГОЭКРАННЫХ ДИСПЛЕЕВ  

Если аргумент командной строки -s не задан, fvwm95 автоматически
  запускается на каждый экран заданного дисплея. После fvwm95 запускает
  независимую нить на каждый экран. Перезапуск fvwm95 должен быть выполнен
отдельно для каждого экрана. Использование EdgeScroll 0 0 очень рекомендуется
для многоэкранных дисплеев. Вам также может понадобится при выходе
  выходить из каждого экрана для полного завершения сессии. <p>
  <p>
 
   
 ОШИБКИ 

As of
fvwm 0.99 there were exactly 39.342 unidentified bugs. Identified bugs have
mostly been fixed, though. Since then 9.34 bugs have been fixed. Assuming
that there are at least 10 unidentified bugs for every identified one,
that leaves us with 39.342 - 9.32 + 10 * 9.34 = 123.402 unidentified bugs.
If we follow this to its logical conclusion we will have an infinite number
of unidentified bugs before the number of bugs can start to diminish,
at which point the program will be bug-free. Since this is a computer program
infinity = 3.4028e+38 if you don't insist on double-precision. At the current
rate of bug discovery we should expect to achieve this point in 3.37e+27
years. I guess I better plan on passing this thing on to my children.... <p>
Known bugs can be found in the BUGS file in the distribution, and in the
TO-DO list. <p>
  <p>
 
   
 АВТОР(Ы) 

Robert Nation при помощи кучи народа, основываясь на коде
 twm  , который написал Tom LaStrange. Rob после этого отошел от дел, а
поддержку продолжает Charles Hines. <p>
  Перевод с английского сделал Виктор
Вислобоков (2:5054/ 8.34@Fidonet.org ) <p>
 

 
   Index 
 
 НАЗВАНИЕ 
 СИНТАКСИС 
 ОПИСАНИЕ 
 ПРАВА 
 АНАТОМИЯ ОКНА 
 ВИРТУАЛЬНЫЙ DESKTOP 
 ИНИЦИАЛИЗАЦИЯ 
 ИКОНКИ  
 МОДУЛИ  
 M4 PREPROCESSING  
 CPP PREPROCESSING  
 AUTO-RAISE (автоматическое перемешение окна наверх)  
 ОПЦИИ 
 КОНФИГУРАЦИОННЫЙ ФАЙЛ 
 ВСТРОЕННЫЕ ФУНКЦИИ  
 КЛАВИАТУРНЫЕ УСКОРИТЕЛИ 
 СТАНДАРТНАЯ КОНФИГУРАЦИЯ  
 ИСПОЛЬЗОВАНИЕ СОБСТВЕННЫХ МНОГОЭКРАННЫХ ДИСПЛЕЕВ  
 ОШИБКИ 
 АВТОР(Ы) 
 
 
 
 
 
 Поиск по тексту MAN-ов:  
 
 
 
 
 
 
 
 
 
 
 


 
 


 
 
 
 
 
Спонсоры:
 
 
 
 
 
 
 
 
Хостинг:
 

 

 


 
 
 
 Закладки на сайте 
 Проследить за страницей 
 
 
Created 1996-2021 by  Maxim Chirkov 
 Добавить ,  Поддержать ,  Вебмастеру 
 
 
 
 


 
 
 






end_of_comments
#---------------------------------------

unset filename