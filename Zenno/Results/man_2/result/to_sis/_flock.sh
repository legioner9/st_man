#!/bin/bash

#. "$HOME/.bashrc"

filename="$HOME/"

echo -e "${HLIGHT}---start file: $filename---${NORMAL}" # start file

#---------------------------------------
:<<end_of_comments


 
 
 
 
 
Профиль:  Аноним  ( вход  |  регистрация ) 

 
 
 
 
 
 

 
 
 
 
  НОВОСТИ  ( + )
 
   КОНТЕНТ 
 
   WIKI 
 
    MAN'ы 
 
    ФОРУМ 
 
 Поиск  ( теги )
 
 
 

 

           
 
 

 
 
 
 
 
 
 
 [  новости  / +++  |  форум  |  wiki  |  теги 
|  
] 
 
 
 
 


 
 
 
 
 
 
 
 
 
 

 Интерактивная система просмотра системных руководств (man-ов) 
  
 
 
 

 
   Тема Набор Категория   
 

  
 Solaris man
 FreeBSD man
 Разные man
 Русские man
 Linux man
 POSIX man
 
 
	   All
	   1
	   2
	   3
	   4
	   5
	   6
	   7
	   8
	   9
 

 
 
  [ Cписок руководств  |  Печать ] 
 
 
 
 flock (2)   flock  (1)   ( Linux man: Команды и прикладные программы пользовательского уровня )   flock  (2)   ( FreeBSD man: Системные вызовы ) >>  flock  (2)   ( Русские man: Системные вызовы )   flock  (2)   ( Linux man: Системные вызовы )   flock  (3)   ( Solaris man: Библиотечные вызовы ) Ключ  flock  обнаружен в базе ключевых слов. 
   
 ИМЯ 

flock - установить или снять advisory блокировку на открытый файл
   
 ОБЗОР 

 #include < sys/file.h > 

 
 int flock(int  fd , int  operation ); 

   
 ОПИСАНИЕ 

Устанавливает или снимает advisory (мягкую, носящую рекомендательный
характер) блокировку на открытый файл, заданный файловым дескриптором
 fd .

Параметр
 operation 

может принимать одно из следующих значений:
 
 
 
 LOCK_SH 

 
Установить разделяемую блокировку. Разделяемую блокировку
на заданный файл может держать более чем один процесс.
 LOCK_EX  

 
Установить эксклюзивную блокировку.  Только один процесс
может держать эксклюзивную блокировку файла.
 LOCK_UN 

 
Удалить существующую блокировку, удерживаемую данным процессом.
 
 
 

 
Вызов
 flock ()

может быть блокирован, если несовместимый тип блокировки
уже удерживается другим процессом. Чтобы выполнить неблокирующий
запрос, включите
 LOCK_NB 

(через
 OR ing)

вместе с одной из вышеописаных операций.
 
 
Один файл не может иметь одновременно и общую и эксклюзивную блокировку.
 
Блокировки, созданные
 flock ()

ассоциируются с файлом или, более точно, с записью в таблице открытых файлов.
Это означает, что дублирующие файловые дескрипторы (созданные, например,
вызоывами
 fork (2) или  dup (2))

указывают на ту же самую блокировку и эта блокировка может быть
изменена или снята при использовании любого из этих дескрипторов.
Таким образом, блокировка освобождается либо через явное выполнение
операции
 LOCK_UN 

на одном из дублирующих дескрипторов, либо когда все такие
дескрипторы будут закрыты.
 
Процесс может только держать на файле один из типов блокировки
(разделяемую или экслюзивную).
Последующие вызовы
 flock ()

на уже заблокированный файл будут преобразовывать текущую блокировку
к новому заданному режиму блокировки.
 
Блокировки, созданные
 flock ()

сохраняются при выполнении
 execve (2).

 
Разделяемая или эксклюзивная блокировка может быть установлена на
файл вне зависимости от режима, в котором этот файл был открыт.
   
 ВОЗВРАЩАЕМОЕ ЗНАЧЕНИЕ 

В случае успеха, возвращается ноль.  В случае ошибки возвращается -1
и значение
 errno 

устанавливается соответствующим образом.
   
 ОШИБКИ 

 
 EWOULDBLOCK 

 
Файл блокирован и был выбран флаг
 LOCK_NB . 

 EBADF 

 
 fd 

не является дескриптором открытого файла.
 EINTR 

 
Во время ожидания установки блокировки, вызов был прерван
сигналом, пришедшим в обработчик.
 EINVAL 

 
Неправильно задано значение
 operation . 

 ENOLCK 

 
Ядру не хватило памяти для создания записи блокировки.
 
   
 СООТВЕТСТВИЕ СТАНДАРТАМ 

4.4BSD (вызов
 flock (2)

появился сперва в 4.2BSD).
В большинстве Unix'ов
 flock (2),

может быть реализован в терминах
 fcntl (2) . 

   
 ЗАМЕЧАНИЯ 

 flock (2)

не блокирует файлы на NFS.  Используйте вместо этого вызов
 fcntl (2),

который работает на NFS, а также наиболее свежую версию
Linux и сервер, который поддерживает блокировки.
 

Начиная с версии ядра 2.0,
 flock (2)

реализован как системный вызов со своими собственными правами,
а не как эмуляция этого вызова в библиотеке GNU C через использование
 fcntl (2).

По смыслу BSD:
не существует никакого взаимодействия между типами блокировок,
устанавливаемыми
 flock (2),

 fcntl (2),

и
 flock (2)

не видит блокировок типа deadlock.
 

 flock (2)

устанавливает только advisory блокировки; имеющий соотвествующие права на
файл, какой-либо процесс может игнорировать использование
 flock (2)

и выполнять над файлом операции ввода/вывода.
 

 flock (2)

и блокировки
 fcntl (2)

имеют разный смысл для ожидающих разветвления (fork) процессов и
 dup (2).

   
 СМОТРИТЕ ТАКЖЕ 

 open (2),

 close (2),

 dup (2),

 execve (2),

 fcntl (2),

 fork (2),

 lockf (3)

 
В
 /usr/src/linux/Documentation 

также есть файлы
 locks.txt 

и
 mandatory.txt . 

   
 ПЕРЕВОД 

Перевёл с английского Виктор Вислобоков < corochoone@perm.ru > 2003
 

 
   Index 
 
 ИМЯ 
 ОБЗОР 
 ОПИСАНИЕ 
 ВОЗВРАЩАЕМОЕ ЗНАЧЕНИЕ 
 ОШИБКИ 
 СООТВЕТСТВИЕ СТАНДАРТАМ 
 ЗАМЕЧАНИЯ 
 СМОТРИТЕ ТАКЖЕ 
 ПЕРЕВОД 
 
 
 
 
 
 Поиск по тексту MAN-ов:  
 
 
 
 
 
 
 
 
 
 
 


 
 


 
 
 
 
 
Спонсоры:
 
 
 
 
 
 
 
 
Хостинг:
 

 

 


 
 
 
 Закладки на сайте 
 Проследить за страницей 
 
 
Created 1996-2021 by  Maxim Chirkov 
 Добавить ,  Поддержать ,  Вебмастеру 
 
 
 
 


 
 
 






end_of_comments
#---------------------------------------

unset filename