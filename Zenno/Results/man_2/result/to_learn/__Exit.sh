#!/bin/bash

#. "$HOME/.bashrc"

filename="$HOME/"

echo -e "${HLIGHT}---start file: $filename---${NORMAL}" # start file

#---------------------------------------
:<<end_of_comments


 
 
 
 
 
Профиль:  Аноним  ( вход  |  регистрация ) 

 
 
 
 
 
 

 
 
 
 
  НОВОСТИ  ( + )
 
   КОНТЕНТ 
 
   WIKI 
 
    MAN'ы 
 
    ФОРУМ 
 
 Поиск  ( теги )
 
 
 

 

           
 
 

 
 
 
 
 
 
 
 [  новости  / +++  |  форум  |  wiki  |  теги 
|  
] 
 
 
 
 


 
 
 
 
 
 
 
 
 
 

 Интерактивная система просмотра системных руководств (man-ов) 
  
 
 
 

 
   Тема Набор Категория   
 

  
 Solaris man
 FreeBSD man
 Разные man
 Русские man
 Linux man
 POSIX man
 
 
	   All
	   1
	   2
	   3
	   4
	   5
	   6
	   7
	   8
	   9
 

 
 
  [ Cписок руководств  |  Печать ] 
 
 
 
 _exit (2)   _exit  (2)   ( Solaris man: Системные вызовы )   _exit  (2)   ( FreeBSD man: Системные вызовы ) >>  _exit  (2)   ( Русские man: Системные вызовы )   _exit  (2)   ( Linux man: Системные вызовы )   _exit  (3)   ( POSIX man: Библиотечные вызовы ) 
   
 НАЗВАНИЕ 

_exit, _Exit -  функция, завершающая работу программы
   
 СИНТАКСИС 

 #include < unistd.h > 

 
 #include < stdlib.h > 

 
 void _Exit(int  status ); 

   
 ОПИСАНИЕ 

 _exit 

"немедленно" завершает работу программы. Все дескрипторы файлов,
принадлежащие процессу, закрываются; все его дочерние процессы
начинают управляться процессом 1 (init), а родительскому процессу
посылается сигнал 
 SIGCHLD. 

 

Значение
 status 

возвращается родительскому процессу как статус завершаемого процесса; он
может быть получен с помощью одной из функций семейства
 wait .

 

Функция
 _Exit 

эквивалентна функции
 _exit .

   
 ВОЗВРАЩАЕМЫЕ ЗНАЧЕНИЯ 

Эти функции никогда не возвращают управление вызвавшей их программе.
   
 СООТВЕТСТВИЕ СТАНДАРТАМ 

SVr4, SVID, POSIX, X/OPEN, BSD 4.3.
Функция  _Exit()  была представлена C99.
   
 ЗАМЕЧАНИЯ 

Для рассмотрения эффектов завершения работы, передачу статуса выхода,
зомби-процессов, сигналов и т.п., смотрите документацию по
 exit (3).

 

Функция
 _exit 

аналогична  exit() , но не вызывает никаких функций,
зарегистрированных с функцией ANSI C
 atexit ,

а также не вызывает никаких зарегистрированных обработчиков сигналов.
Будет ли выполняться сброс стандартных буферов ввода-вывода и
удаление временных файлов, созданных
 tmpfile (3),

зависит от реализации.
С другой стороны,
 _exit 

закрывает открытые дескрипторы файлов, а это может привести к
неопределенной задержке для завершения вывода данных.
Если задержка нежелательна, то может быть полезным
перед вызовом  _exit()  вызывать функции типа  tcflush() .
Будет ли завершен ввод-вывод, а также какие именно операции
ввода-вывода будут завершены при вызове  _exit() ,
зависит от реализации.
   
 СМ. ТАКЖЕ 

 fork (2),

 execve (2),

 waitpid (2),

 wait4 (2),

 kill (2),

 wait (2),

 exit (3),

 termios (3)


 
   Index 
 
 НАЗВАНИЕ 
 СИНТАКСИС 
 ОПИСАНИЕ 
 ВОЗВРАЩАЕМЫЕ ЗНАЧЕНИЯ 
 СООТВЕТСТВИЕ СТАНДАРТАМ 
 ЗАМЕЧАНИЯ 
 СМ. ТАКЖЕ 
 
 
 
 
 
 Поиск по тексту MAN-ов:  
 
 
 
 
 
 
 
 
 
 
 


 
 


 
 
 
 
 
Спонсоры:
 
 
 
 
 
 
 
 
Хостинг:
 

 

 


 
 
 
 Закладки на сайте 
 Проследить за страницей 
 
 
Created 1996-2021 by  Maxim Chirkov 
 Добавить ,  Поддержать ,  Вебмастеру 
 
 
 
 


 
 
 






end_of_comments
#---------------------------------------

unset filename